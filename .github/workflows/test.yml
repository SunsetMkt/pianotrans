name: "Test"
on:
  pull_request:
    paths-ignore:
    - '**.md'
    - 'screenshots/**'
    - 'windows/**'
  push:
    paths-ignore:
    - '**.md'
    - 'screenshots/**'
    - 'windows/**'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Enable upterm'
        type: boolean
        required: false
        default: false
jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: cachix/install-nix-action@v16
      with:
        extra_nix_config: |
          keep-derivations = true
          keep-outputs = true
    - uses: cachix/cachix-action@v10
      with:
        name: azuwis
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        skipPush: true
    - name: Prepare for cache restore
      run: |
        if [ "$(uname)" = "Darwin" ]
        then
          sudo launchctl unload /Library/LaunchDaemons/org.nixos.nix-daemon.plist
        else
          sudo systemctl stop nix-daemon
        fi
        sudo mv /nix/store /nix/store.bak
        sudo mv /nix/var/nix/db/db.sqlite /nix/var/nix/db/db.sqlite.bak
        sudo chown $USER /nix /nix/var/nix/db/
    - uses: actions/cache@v2
      id: cache
      with:
        key: pianotrans3-${{ matrix.os }}-${{ hashFiles('flake.*', 'nix/**') }}
        restore-keys: |
          pianotrans3-${{ matrix.os }}-
        path: |
          /nix/store
          /nix/var/nix/db/db.sqlite
    - name: Restore if cache miss
      run: |
        if [ ! -e /nix/store ]
        then
          sudo mv /nix/store.bak /nix/store
          sudo mv /nix/var/nix/db/db.sqlite.bak /nix/var/nix/db/db.sqlite
        fi
        if [ "$(uname)" = "Darwin" ]
        then
          sudo launchctl load -w /Library/LaunchDaemons/org.nixos.nix-daemon.plist
        else
          sudo systemctl start nix-daemon
        fi
    - uses: lhotari/action-upterm@v1
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      with:
        limit-access-to-actor: true
    - name: Test transcribe
      run: |
        nix --print-build-logs develop --profile /nix/var/nix/profiles/per-user/$USER/pianotrans --command ./PianoTrans.py --cli test/cut_liszt.opus
        for archive in $(nix flake archive --json | grep -E -o '/nix/store/[^"]+')
        do
          ln -fsn $archive "/nix/var/nix/gcroots/per-user/$USER/$(basename $archive)"
        done
        test -e test/cut_liszt.opus.mid
    - name: Push to cachix
      run: |
        # delete old stuff not relevant to this build
        nix-collect-garbage -d
        # push to cachix
        cachix push azuwis /nix/var/nix/profiles/per-user/$USER/pianotrans
    - name: Prepare for cache upload
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        if [ "$(uname)" = "Darwin" ]
        then
          sudo launchctl unload /Library/LaunchDaemons/org.nixos.nix-daemon.plist
        else
          sudo systemctl stop nix-daemon
        fi
